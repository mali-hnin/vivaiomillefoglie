{"ast":null,"code":"/* eslint no-console:0 */\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/packs and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n// Activate Active Storage\n// import * as ActiveStorage from \"@rails/activestorage\"\n// ActiveStorage.start()\nrequire(\"trix\");\n\nrequire(\"@rails/actiontext\");\n\nrequire(\"@rails/activestorage\").start();\n/*var Trix = require(\"trix\");*/\n\n/* what the newly created button does */\n\n\nTrix.config.textAttributes.subHeading = {\n  inheritable: true,\n  tagName: 'h2'\n};\n/* insert the button visual in the default toolbar */\n\naddEventListener(\"trix-initialize\", function (event) {\n  var buttonHTML = '<button type=\"button\" data-trix-attribute=\"h2\">H2</button>';\n  event.target.toolbarElement.querySelector(\".trix-button-group\").insertAdjacentHTML(\"beforeend\", buttonHTML);\n});","map":{"version":3,"sources":["/home/mariasole/code/mali-hnin/vivaio-millefoglie/app/packs/entrypoints/application.js"],"names":["require","start","Trix","config","textAttributes","subHeading","inheritable","tagName","addEventListener","event","buttonHTML","target","toolbarElement","querySelector","insertAdjacentHTML"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAA,OAAO,CAAC,MAAD,CAAP;;AACAA,OAAO,CAAC,mBAAD,CAAP;;AACAA,OAAO,CAAC,sBAAD,CAAP,CAAgCC,KAAhC;AAEA;;AACA;;;AACAC,IAAI,CAACC,MAAL,CAAYC,cAAZ,CAA2BC,UAA3B,GAAwC;AAAEC,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAAxC;AAEA;;AACAC,gBAAgB,CAAC,iBAAD,EAAoB,UAASC,KAAT,EAAgB;AAChD,MAAIC,UAAU,GAAG,4DAAjB;AAEAD,EAAAA,KAAK,CAACE,MAAN,CAAaC,cAAb,CACAC,aADA,CACc,oBADd,EAEAC,kBAFA,CAEmB,WAFnB,EAEgCJ,UAFhC;AAGH,CANe,CAAhB","sourcesContent":["/* eslint no-console:0 */\n// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/packs and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\n\n// Activate Active Storage\n// import * as ActiveStorage from \"@rails/activestorage\"\n// ActiveStorage.start()\n\nrequire(\"trix\")\nrequire(\"@rails/actiontext\")\nrequire(\"@rails/activestorage\").start()\n\n/*var Trix = require(\"trix\");*/\n/* what the newly created button does */\nTrix.config.textAttributes.subHeading = { inheritable: true, tagName: 'h2' };\n\n/* insert the button visual in the default toolbar */\naddEventListener(\"trix-initialize\", function(event) {\n    var buttonHTML = '<button type=\"button\" data-trix-attribute=\"h2\">H2</button>'\n\n    event.target.toolbarElement.\n    querySelector(\".trix-button-group\").\n    insertAdjacentHTML(\"beforeend\", buttonHTML)\n})\n"]},"metadata":{},"sourceType":"module"}